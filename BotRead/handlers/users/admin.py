from aiogram.dispatcher.filters import Command
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery, ContentTypes

from keyboards.inline.admin_keyboards import admin_buttons
from states.editTables import addBooks
from loader import dp, bot
from data.config import admins
from filters.forwarded_message import IsForwarded
from utils.db_api.quick_commands import books_commands as commands
from filters.parsing_functions import get_link_chapter

@dp.message_handler(Command("edit"), user_id=admins)
async def edit(message: Message):
	await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Ö–æ–∑—è–∏–Ω üòå. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=admin_buttons)

# –ó–ê–ü–û–õ–ù–Ø–ï–ú –¢–ê–ë–õ–ò–¶–£ –° –ù–ê–ó–í–ê–ù–ò–ï–ú 'BOOKS'
@dp.callback_query_handler(text_contains="Books")
async def collect_information(call: CallbackQuery):
	await call.answer(cache_time=3)
	
	await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)
	await bot.send_message(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ø–æ—Å—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞.", chat_id=call.from_user.id)
	await addBooks.POSTID.set()

#–ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ò–ó –ü–û–°–¢–ê
@dp.message_handler(IsForwarded(), content_types=ContentTypes.ANY, state=addBooks.POSTID)
async def get_post_info(message: Message, state: FSMContext):
	post_id = message.forward_from_message_id

	try:
		if await commands.check_post(post_id=post_id):
			for i in range(len(message.reply_markup.inline_keyboard)):
				for j in range(len(message.reply_markup.inline_keyboard[i])):

					if message.reply_markup.inline_keyboard[i][j]["text"] != "–ù–æ–≤–µ–ª–ª–∞":
						await state.update_data(name=message.reply_markup.inline_keyboard[i][j]["text"])
						break
					else:
						pass

			await state.update_data(post_id=post_id)

			await message.answer(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–∏–ø—ã –∏ —Å—Å—ã–ª–∫–∏ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
								"<code>–ù–æ–≤–µ–ª–ª–∞ - https://remanga.org | –ú–∞–Ω–≥–∞ - https://remanga.org</code>\n"
								"–ò–ª–∏\n"
								"<code>–ù–æ–≤–µ–ª–ª–∞ - https://remanga.org</code>")
			await addBooks.TYPES.set()
		else:
			await message.answer(text="–≠—Ç–æ—Ç –ø–æ—Å—Ç —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
			await state.finish()
	except:
		await state.finish()
		await message.answer(text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Å—Ç? ü§î")


#–ü–û–õ–£–ß–ê–ï–ú –ü–û–°–õ–ï–î–ù–Æ–Æ –ò–ù–§–£
@dp.message_handler(state=addBooks.TYPES)
async def answer_q6(message: Message, state: FSMContext):
	example = ""
	text = message.text
	await state.update_data(text=text)
	data = await state.get_data()
	post_id = data.get("post_id")
	name = data.get("name")

	try:
		example += f"<code>{post_id} = {name}</code>"
		
		if ' | ' in text:
			text = text.split(' | ')
			for i in range(len(text)):
				var = text[i].split(' - ')
				example += f"\n<code>{var[0]} = {var[1]}</code>"
		else:
			var = text.split(' - ')
			example += f"\n<code>{var[0]} = {var[1]}</code>"

		await message.answer(text=f"{example}\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö? (–¥–∞/–Ω–µ—Ç)")
		await addBooks.DONE.set()
	except:
		await message.answer(text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
		await state.finish()

#–ü–û–õ–£–ß–ê–ï–ú –°–û–ì–õ–ê–°–ò–ï
@dp.message_handler(state=addBooks.DONE)
async def answer_q6(message: Message, state: FSMContext):
	done = message.text
	data = await state.get_data()
	post_id = data.get("post_id")
	name = data.get("name")
	text = data.get("text")

	await state.finish()

	if done in ["–î–∞", "–¥–∞", "–î", "–¥"]:
		try:
			await commands.add_books(post_id=post_id, name=name)
			
			if ' | ' in text:
				text = text.split(' | ')
				for i in range(len(text)):
					var = text[i].split(' - ')

					chapter = await get_link_chapter(link=str(var[1]))

					if chapter:
						await commands.add_types(post_id=post_id, types=var[0], url=var[1], chapter=chapter)
			else:
				var = text.split(' - ')

				chapter = await get_link_chapter(link=str(var[1]))

				if chapter:
					await commands.add_types(post_id=post_id, types=var[0], url=var[1], chapter=chapter)

			await message.answer(text="–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã! üòÅ")
		except:
			await message.answer(text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
			await commands.delete_item_books(post_id=post_id)
	else:
		await message.answer(text="–í—ã —Ä–µ—à–∏–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ!")